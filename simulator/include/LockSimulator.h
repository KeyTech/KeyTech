#ifndef LOCKSIMULATOR_H
#define	LOCKSIMULATOR_H

#include "Defines.h"


class LockSimulator {
public:

	/**
	 * Constructor.
	 * @param is is the stream to read from.
	 */
	LockSimulator(istream *is);

	/**
    * Constructor.
	*/
	LockSimulator();

    /**
     * Processes the input given by users.
     * @return next_state Returns the next state to be executed by the state machine.
     */
    bool detectEntry();
    
    /**
     * Turns the response packets into orders.
     * @param flags A pointer to the response packet generated by the Communication class.
     * @return returns true for any known answers, false if not.
     */
    bool setOutput(ResponseAnswer flags);
    
    /**
     * Sets the lock state.
     * @param state The state to set the lock to. Either OPEN or CLOSED.
     */
    void setLockState(bool state);
    
    /**
     * @return the state of the lock. Either OPEN or CLOSED.
     */
    bool getLockState();
    
    /**
     * @return the user identifier as a 32 bit unsigned integer.
     */
    uint32_t getUserIdentifier();
    
    /**
     * @return the pin code in a 16 bit unsigned integer.
     */
    uint16_t getPincode();

private:
    uint32_t userIdentifier;
    uint16_t pincode;
    bool lockState;
    istream *stream;
};

#endif	/* LOCKSIMULATOR_H */

